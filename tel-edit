#!/usr/bin/env bash
# Edit applet for TEL
# Version 2
# SealyJ 2020
if [ "$1" == "-r" ] || [ "$1" == "--root" ] ; then
	cd / 
fi
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_DEFAULT_OPTS="
--info=inline
--multi
--preview-window=up:60%:follow:sharp
--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
--color='hl:148,hl+:154,pointer:032,marker:010,bg+:237,gutter:008'
--prompt='∼ ' --pointer='' --marker='✓'
--bind '?:toggle-preview'
--bind 'ctrl-a:select-all'
--bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'
"
[[ -z "$EDITOR" ]] && echo 'Please set a default $EDITOR' && exit 1
if [ -z $1 ] ; then
	selected_file=$(fzf --cycle --color=16 --prompt="  Edit with $EDITOR: ")
else
	file_search=$(echo "$@")
	selected_file=$(fzf -e --cycle --color=16 --query="$file_search" --prompt="  Edit with $EDITOR: " --select-1)
fi

if [ -z "$selected_file" ] ; then
	# no file selected or cancel fzf selection, this is preferable as it allows user to correct typos in fzf prompt rather than giving 'file not found error' 
	# printf "\e[38;5;2m Edit\e[m%s: Error - file not found "
	exit 1
else
	curr_dir=$(pwd)
	printf "\e[38;5;2m Editing\e[m%s file: $curr_dir/$selected_file"
	$EDITOR "$selected_file"
fi

