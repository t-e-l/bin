#!/usr/bin/env bash
# Edit applet for TEL
# Version 0.3
# SealyJ 2020
# requires: fzf bat nano 
# optional: magisk su binary
useroot=

fzf_bin=$(which fzf)

if [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then
	echo -e "Usage: tel-edit [options] [filename]
	tel-edit			= interactive file picker
	tel-edit configs		= display file picker with matches for configs
	tel-edit -h			= show this help menu
	tel-edit -r			= search from root directory with root privs
	"
	exit 0
elif [ "$1" == "-r" ] || [ "$1" == "--root" ] ; then
	shift
	if [ ! -z $1 ] ; then
		file_search="$@"
	else
		file_search=''
	fi
	export FZF_DEFAULT_COMMAND='sudo fd . '/' -a  --type file --hidden --follow --exclude .git -E /proc -E /sys -E /dev -E /cache'
	selected_file=$($fzf_bin --cycle --color=16 --query="$file_search" --prompt="  ROOT Edit with $EDITOR: ")
	if [ ! -z $selected_file ] ; then
		printf "\e[38;5;2m Editing\e[m%s file as root: $selected_file\n"
		su -c "/data/data/com.termux/files/usr/bin/$EDITOR $selected_file"
	else
		exit 1
	fi
	exit 0
else
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_DEFAULT_OPTS="
--info=inline
--multi
--preview-window=up:60%:follow:sharp
--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
--prompt='∼ ' --pointer='>' --marker='✓'
--bind '?:toggle-preview'
--bind 'ctrl-a:select-all'
--bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'
"
fi

show_help(){
    printf  "%s\n"\
            "Opens a file in your terminals text editor"\
            "tel-edit [OPTIONS] [PATTERN]"\
            "__________________________"\
	    "OPTIONS"\
            "  -h | --help	display this help message"\
            "  -r | --root	use root privledged"
}


if [ -z $1 ] ; then
	selected_file=$($fzf_bin --cycle --color=16 --prompt="  Edit with $EDITOR: ")
else
	file_search=$(echo "$@")
	selected_file=$($fzf_bin --cycle --color=16 --query="$file_search" --prompt="  Edit with $EDITOR: " --select-1)
fi

if [ -z "$selected_file" ] ; then
	# no file selected or cancel fzf selection, this is preferable as it allows user to correct typos in fzf prompt rather than giving 'file not found error' 
	# printf "\e[38;5;2m Edit\e[m%s: Error - file not found "
	exit 1
else
	curr_dir=$(pwd)
	# manipulate history here
	#print -S "$useroot $EDITOR $curr_dir/$selected_file"
	printf "\e[38;5;2m Editing\e[m%s file: $curr_dir/$selected_file\n"
	$useroot "${EDITOR:-vi}" "$selected_file"
fi

