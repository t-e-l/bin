#!/usr/bin/env bash
if [ -d /system/app ] && [ -d /system/priv-app ]; then #check if running on android

	# shellcheck disable=SC2086,SC2048
	trim_all() {
	    # remove whitespace from string
	    # Usage: trim_all "   example   string    "
	    set -f
	    set -- $*
	    printf '%s\n' "$*"
	    set +f
	}
	reverse() {
	# flip an array - first index becomes last and so forth
    	# first argument is the array to reverse
    	# second is the output array
    	declare -n arr="$1" rev="$2"
    	for i in "${arr[@]}"
    	do
        	rev=("$i" "${rev[@]}")
    	done
	}
	# get kernal, os and arch
	read -r os kernel arch <<-EOF
		$(uname -srm)
	EOF
	# root detection
	rooted= ; su -c echo > /dev/null 2>&1 && {
		rooted="/root"
	}
#	time_zone="$(getprop persist.sys.timezone)"
	android_version="$(getprop ro.build.version.release)"
	device_model="$(getprop ro.product.name)"
	device_rom="$(getprop ro.vendor.build.id)"
	security_patch="$(getprop ro.build.version.security_patch)"

	######## CPU #######
	speed_dir="/sys/devices/system/cpu/cpu0/cpufreq"
	cpu_file="/proc/cpuinfo"
	IFS=' ' read -a cpu_info <<-EOF #read into array
		$(awk -F '\\s*: | @' \
                            '/model name|Hardware|Processor|^cpu model|chip type|^cpu type/ {
                            cpu=$2; if ($1 == "Hardware") exit } END { print cpu }' "$cpu_file")
	EOF
	reverse cpu_info cpu_info_rev # flip to get cpu model
	cpu="${cpu_info_rev[0]}" # first becomes model
       # maxspeed="$(< "${speed_dir}/cpuinfo_max_freq")"
       # maxspeed="$((maxspeed / 1000)) MHz"
        speed="$(< "${speed_dir}/scaling_max_freq")" ||\
        speed="$(< "${speed_dir}/cpuinfo_max_freq")"
        speed="$((speed / 1000))MHz"
	cores=$(cat /proc/cpuinfo | grep -e 'CPU architecture' | tail -n 1 | cut -d' ' -f3)
	###############################

	####### MEMORY ##########
	
	memtotal="$(cat /proc/meminfo | grep -e 'MemTotal' | cut -d' ' -f9)"
	memtotal="$(( memtotal / 1000 )) MiB"
	memfree="$(trim_all "$(cat /proc/meminfo | grep -e 'MemAvailable' | cut -d':' -f2| cut -d'k' -f1)")"
	memfree="$(( memfree / 1000 ))"
	##########################

	########### UPTIME #######
	uptime=$(uptime | awk -F'( |,|:)+' '{d=h=m=0; if ($7=="min") m=$6; else {if ($7~/^day/) {d=$6;h=$8;m=$9} else {h=$6;m=$7}}} {print d+0,"days,",h+0,"hrs,",m+0,"mins"}')

	#truncate strings here
	#length of tellogo line = ?? 43 roughly
	#max width of text with the logo = 
	max_width=$((COLUMNS - 43))
	uptime=${uptime:0:$max_width}


	

##### ADD COLORS	
echo -ne """   
                        \e[1;32m▒\e[0m°.		
                        \e[1;32m▒▒▒\e[0mo             
           \e[1;32m▒▒▒▒▒▒▒▒▒      ▒▒▒\e[0mo           
         \e[1;32m▒▒▒▒▒▒▒▒▒▒▒▒      ▒▒▒\e[0mO           
         \e[1;32m▒▒▒▒▒▒▒▒▒▒▒▒▒    ▒▒▒▒\e[0m0           \e[3m\e[1m ${NAME}${rooted}@${device_model} $time_zone \e[0m
    \e[1;32m▒▒▒   ▒▒▒▒▒\e[0m^\e[1;32m▒▒▒\e[0m^\e[1;32m▒▒▒  ▒▒▒▒\e[0m0\e[1;32m▒▒▒▒\e[0m	   \e[9m               \e[m
 ▄▄\e[1;32m▒▒▒▒▒\e[0m▄▄▄▄▄\e[1;32m▒▒▒▒▒▒▒▒▒\e[0m▄▄\e[1;32m▒▒▒▒▒▒▒▒▒▒▒▒\e[0m  	  \e[1m os:\e[0m Android $android_version $arch 
 ▌  \e[1;32m▒▒▒\e[0m        ▌          \e[1;32m▒▒▒▒\e[0m    ▌\e[1;32m▒▒\e[0m	  \e[1m build:\e[0m $device_rom 
 ▌▄▄▄\e[1;32m▒▒\e[0m .;\e[1;32m▒\e[0m▄▄▄▄▌    ▄▄▄▄▄▄o\e[1;32m▒▒▒▒\e[0m   ▌\e[1;32m▒▒\e[0m	 \e[1m  patch:\e[0m $security_patch 
   \e[1;32m▒▒\e[0m▌\e[1;32m▒▒▒▒\e[0m ▌\e[1;32m▒▒▒\e[0m▌    ▌▄▄▄▄▄o\e[1;32m▒▒▒▒\e[0m   ▌0\e[1;32m▒▒\e[0m    \e[1m kern:\e[0m $kernel 
  \e[1;32m▒▒▒\e[0m▌     ▌\e[1;32m▒▒\e[0m0▌         o\e[1;32m▒▒▒\e[0m     ▌O\e[1;32m▒▒\e[0m 	  \e[1m cpu:\e[0m $cpu ($cores) @ $speed 
 \e[1;32m▒▒▒\e[0m0▌     ▌\e[1;32m▒▒\e[0mO▌    ▄▄▄▄o\e[1;32m▒▒▒▒\e[0m   . ▌o\e[1;32m▒▒\e[0m    \e[1m mem:\e[0m $memfree / $memtotal available 
 \e[1;32m▒▒▒\e[0mO▌ ∙ °\e[1;32m▒\e[0m▌ \e[1;32m▒▒\e[0mO    ▌▄▄▄\e[1;32m▒▒▒\e[0m▌    \e[1;32m▒\e[0mo\e[1;32m▒▒▒\e[0m▄▄▄  \e[1m up:\e[0m $uptime     
  \e[1;32m▒▒▒\e[0mo\e[1;32m▒▒▒▒▒\e[0m▌  \e[1;32m▒▒\e[0mo      O\e[1;32m▒▒\e[0m ▌     \e[1;32m▒▒\e[0m     ▌ 
    \e[1;32m▒▒▒\e[0m▄▄▄▄▌   \e[1;32m▒▒\e[0mo▄▄▄▄▄▄\e[1;32m▒▒▒\e[0m▌▄▄▄▄▄▄▄▄▄▄▄▄▌ 
                \e[1;32m▒▒\e[0mo      o\e[1;32m▒▒\e[0m  o\e[1;32m▒▒\e[0m         
                \e[1;32m▒\e[0mo             °\e[1;32m▒\e[0m   
 
"""

else
	echo 'Only made for android'
fi
